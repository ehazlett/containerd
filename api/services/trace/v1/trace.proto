syntax = "proto3";

package containerd.services.trace.v1;

import "google/protobuf/empty.proto";
import weak "gogoproto/gogo.proto";

option go_package = "github.com/containerd/containerd/api/services/trace/v1;trace";

service Trace {
	rpc Probe(ProbeRequest) returns (stream ProbeResponse);
        rpc Unload(UnloadRequest) returns (google.protobuf.Empty);
}

message KProbeConfig {
        string syscall = 1;
}

message UProbeConfig {
        string name = 1;
        string symbol = 2;
}

message ProbeRequest {
        string id = 1 [(gogoproto.customname) = "ID"];
        string source = 2;
        oneof probe_config {
                KProbeConfig kprobe_config = 3;
                UProbeConfig uprobe_config = 4;
        }
        string probe_name = 5;
        string return_function_name = 7;
        string table_id = 8 [(gogoproto.customname) = "TableID"];
        string container_id = 9 [(gogoproto.customname) = "ContainerID"];
}

message ProbeResponse {
        bytes data = 1;
}

message UnloadRequest {
        string id = 1 [(gogoproto.customname) = "ID"];
}
